/:
  get:
    tags:
      - server
    summary: summary
    description: description
    responses:
      200:
        description: hello
/_active_tasks:
  get:
    tags:
      - server
    description: This request retrieves a list of all tasks running on the server.
    responses:
      200:
        description: 200 OK – Request completed successfully
        schema:
          $ref: '#/definitions/ActiveTasks'
/_replicate:
  post:
    tags:
      - server
    description: |
      This request starts or cancels a database replication operation.
      
      You can cancel continuous replications by adding the cancel field to the JSON request object and setting the value to true. Note that the structure of the request must be identical to the original for the cancellation request to be honoured. For example, if you requested continuous replication, the cancellation request must also contain the continuous field.
    parameters:
      - $ref: '#/parameters/replication'
    responses:
      200:
        description: 200 OK
        schema:
          type: object
          properties:
            ok:
              type: boolean
              description: Indicates whether the replication operation was successful
            session_id:
              type: string
              description: Session identifier
      404:
        description: |
          The replication with the specified parameters does not exist. If you're trying to cancel a running replication but encounter this response it means that the parameters do not match the ones in the request that started the replication.
/_session:
  get:
    tags:
      - server
    summary: Retrieve session information
    description: This request retrieves session information. Even though Couchbase Lite doesn’t support user logins, it implements a generic response to the _session API for compatibility with apps that might call it.
    responses:
      200:
        description: 200 OK
/_uuids:
  get:
    tags:
      - server
    summary: List of database identifiers
    description: This request retrieves a list of the database identifiers.
    responses:
      200:
        description: List of UUIDs
        schema:
          type: object
          properties:
            uuids:
              type: string
/{db}/_all_docs:
  parameters:
    - $ref: '#/parameters/db'
  get:
    tags:
      - database
    operationId: allDocs
    summary: All docs
    description: |
      This request returns a built-in view of all the documents in the database.
    parameters:
      - $ref: '#/parameters/access'
      - $ref: '#/parameters/channels'
      - $ref: '#/parameters/include_docs'
      - $ref: '#/parameters/revs'
      - $ref: '#/parameters/update_seq'
    responses:
      200:
        description: Request completed successfully
        schema:
          type: object
          properties:
            offset:
              type: string
              description: Starting index of the returned rows.
            rows:
              type: array
              description: Array of row objects.
              items:
                $ref: '#/definitions/QueryRow'
            total_rows:
              type: integer
              description: Number of documents in the database. This number is not the number of rows returned.
            update_seq:
              type: integer
              description: Sequence identifier of the underlying database that the view reflects.
/{db}/{doc}:
  parameters:
    - $ref: '#/parameters/db'
    - $ref: '#/parameters/doc'
  get:
    tags:
      - document
    operationId: get
    parameters:
      - $ref: '#/parameters/attachments'
      - $ref: '#/parameters/atts_since'
      - $ref: '#/parameters/open_revs'
      - $ref: '#/parameters/revs'
    summary: Get document
    description: This request retrieves a document from a database.
    responses:
      200:
        description: The message body contains the following objects in a JSON document.
        schema:
          $ref: '#/definitions/Success'
  put:
    tags:
      - document
    operationId: put
    parameters:
      - in: body
        name: body
        description: Request body
        schema:
          $ref: '#/definitions/Document'
      - $ref: '#/parameters/new_edits'
      - $ref: '#/parameters/rev'
    summary: Create or update document
    description: |
      This request creates a new document or creates a new revision of an existing document. It enables you to specify the identifier for a new document rather than letting the software create an identifier. If you want to create a new document and let the software create an identifier, use the POST /db request.
      If the document specified by doc does not exist, a new document is created and assigned the identifier specified in doc. If the document already exists, the document is updated with the JSON document in the message body and given a new revision.
    responses:
      200:
        description: The response is a JSON document that contains the following objects
        schema:
          $ref: '#/definitions/Success'
  delete:
    tags:
      - document
    operationId: delete
    parameters:
      - $ref: '#/parameters/rev'
    summary: Delete document
    description: |
      This request deletes a document from the database. When a document is deleted, the revision number is updated so the database can track the deletion in synchronized copies.
    responses:
      200:
        description: Document successfully removed
        schema:
          $ref: '#/definitions/Success'